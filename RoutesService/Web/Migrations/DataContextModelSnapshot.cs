// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Web.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Entities.BusStop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BusStops");
                });

            modelBuilder.Entity("Domain.Entities.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Domain.Entities.RouteStop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("BusStopId")
                        .HasColumnType("char(36)");

                    b.Property<TimeSpan?>("IntervalToNextStop")
                        .HasColumnType("time(6)");

                    b.Property<Guid?>("NextRouteStopId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("BusStopId");

                    b.HasIndex("NextRouteStopId");

                    b.HasIndex("RouteId");

                    b.ToTable("RouteStops");
                });

            modelBuilder.Entity("Domain.Entities.RouteStop", b =>
                {
                    b.HasOne("Domain.Entities.BusStop", "BusStop")
                        .WithMany()
                        .HasForeignKey("BusStopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.RouteStop", "NextRouteStop")
                        .WithMany()
                        .HasForeignKey("NextRouteStopId");

                    b.HasOne("Domain.Entities.Route", null)
                        .WithMany("RouteStops")
                        .HasForeignKey("RouteId");

                    b.Navigation("BusStop");

                    b.Navigation("NextRouteStop");
                });

            modelBuilder.Entity("Domain.Entities.Route", b =>
                {
                    b.Navigation("RouteStops");
                });
#pragma warning restore 612, 618
        }
    }
}
